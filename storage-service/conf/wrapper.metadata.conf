#encoding=UTF-8
#
# Copyright 2015(c) The Ontario Institute for Cancer Research. All rights reserved.
#
# DCC Metadata Service - JSW configuration
#
# Description:
#   The is the Java Server Wrapper configuration file for the dcc-metadata distribution.
#
# See:
#   - http://wrapper.tanukisoftware.com/doc/english/introduction.html
#   - http://wrapper.tanukisoftware.com/doc/english/properties.html

#********************************************************************
# Wrapper Application Properties
#********************************************************************

# Locate the java binary on the system PATH:
wrapper.java.command=java

# Java Main class.  This class must implement the WrapperListener interface
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as needed starting from 1
wrapper.java.classpath.1=../lib/dcc-metadata-server.jar
wrapper.java.classpath.2=../lib/wrapper.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-Dlog.dir=../logs
wrapper.java.additional.2=-Dcom.sun.management.jmxremote.port=9999
wrapper.java.additional.3=-Dcom.sun.management.jmxremote.ssl=false
wrapper.java.additional.4=-Dcom.sun.management.jmxremote.authenticate=false
wrapper.java.additional.5=-Djava.security.egd=file:/dev/./urandom
wrapper.java.additional.6=-Djavax.net.ssl.trustStore=%DCC_HOME%/conf/ssl/cacerts
wrapper.java.additional.7=-Djavax.net.ssl.trustStorePassword=%UCSC_STORAGE_TRUSTSTORE_PASSWORD%
wrapper.java.additional.8=-Dspring.profiles.active=production
wrapper.java.additional.9=-Dserver.port=8444
wrapper.java.additional.10=-Dmanagement.port=8544
wrapper.java.additional.11=-Dauth.server.url=%UCSC_STORAGE_AUTH_SERVER%/oauth/check_token
wrapper.java.additional.12=-Dauth.server.clientId=%UCSC_STORAGE_METADATA_CLIENT_ID%
wrapper.java.additional.13=-Dauth.server.clientsecret=%UCSC_STORAGE_METADATA_CLIENT_SECRET%
wrapper.java.additional.14=-Dspring.data.mongodb.uri=%UCSC_STORAGE_METADATA_DB%/dcc-metadata
wrapper.java.additional.15=-Dserver.ssl.key-store=%DCC_HOME%/conf/ssl/storage.ucsc-cgl.org.jks
wrapper.java.additional.16=-Dserver.ssl.key-store-password=%UCSC_STORAGE_KEYSTORE_PASSWORD%
wrapper.java.additional.17=-Dserver.ssl.key-store-type=JKS
#wrapper.java.additional.18=-Djavax.net.debug=all

# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=3

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=4092

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=org.springframework.boot.loader.JarLauncher
wrapper.app.parameter.2=--spring.config.location=file:../conf/application.yml
wrapper.app.parameter.3=--logging.config=../conf/logback.xml
wrapper.app.parameter.4=--logging.path=../logs

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/wrapper.YYYYMMDD.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# The roll mode of the log file
wrapper.logfile.rollmode=DATE

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=DCC Metadata Server

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Ignore output from dumping the configuration to the console.  This is only needed by the TestWrapper sample application.)
wrapper.filter.trigger.999=wrapper.filter.trigger.*java.lang.OutOfMemoryError
wrapper.filter.allow_wildcards.999=TRUE
wrapper.filter.action.999=NONE
#  Ignore -verbose:class output to avoid false positives.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE
# (Simple match)
wrapper.filter.trigger.1001=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1001=TRUE
wrapper.filter.action.1001=RESTART
wrapper.filter.message.1001=The JVM has run out of memory.

#********************************************************************
# Wrapper Application Checks
#********************************************************************
# Application restart request detection.
wrapper.filter.trigger.1002=@@@@org.icgc.dcc.RESTART@@@@
wrapper.filter.action.1002=RESTART
wrapper.filter.message.1002=An application restart request has been detected.
